name: Continuous Integration and Push to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Baixa o código do seu repositório para a máquina virtual
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura o ambiente Java (JDK 21) e habilita o cache do Maven
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # 3. Aplica o estilo de código para manter a consistência
      - name: Apply code style
        run: mvn spotless:apply

      # 4. Compila o código, roda os testes e empacota a aplicação em um .jar
      - name: Build with Maven
        run: ./mvnw clean package

      # 5. Efetua o login no Docker Hub usando credenciais seguras
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # 6. Extrai metadados da imagem, gerando uma tag com o hash do commit
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/api-rest-springboot
          tags: |
            type=sha,prefix=

      # 7. Constrói a imagem Docker e a envia para o Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}